对于八大基本类型来说引用和实例的区别不太大

对于三大引用类型来说区别就大了
Object object = new Object();
等号左边的是引用，　等号右边的是实例


java的参数传递是引用传递

如果是八个基本数据类型：int , float, double, short, byte, boolean, long, char
就只是值传递，即，函数内参数值的改变，不影响函数外的原值


对于三大引用类型来说有区别
Object object = new Object();
等号左边的是引用，　等号右边的是实例

java的函数参数传递是引用传递
如果是三个引用类型：interface , 数组，　class

是引用传递
是引用传递
是引用传递

即，函数内参数的实例没有改变的情况下，引用里面实例的值被改变了，函数外的原值也会改变，　如果给这个引用赋了一个新的实例，那么新实例的任何改变都和原实例无关


class Bean{
  int step;
  public Bean (int step) {this.step = step;}
}

public void change(int a1, Bean b1, Bean c1) {
	a1 = 1;
	b1.step = 2;
	c1 = new Bean(10);
}

void main() {
	int a = 5;
	Bean b = new Bean(5);
	Bean C = new Bean(5);
	change(a,b,c);
    
        a是基本类型，函数内的改变对它没有影响，它的值还是５
	b是引用类型，函数内的b1和b指向同一个地址值(实例)，所以它的值被改变了是２
	C是引用类型，但函数内的改变把c的地址值(实例)从c1中抹除，给c1一个新的地址值(实例)，所以它的值还是5
}


